#version 430

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

uniform float velocityThreshold = 0.01;

layout (std430, binding = 0) buffer Positions
{
	vec4 positions[];
};

layout (std430, binding = 1) buffer Velocities
{
	vec4 velocities[];
};

void main()
{
	uint gID = gl_GlobalInvocationID.x;
	
    if (positions[gID].w < velocityThreshold)
    {
        vec4 r = glm::vec4(0.0);
        float e = 0.0;

        velocities[gID] = r * 0.0 + vec4(0.0, 1.0, 0.0, 0.0);
        positions[gID] = r * 0.0 + vec4(0.0, 0.2, 0.0, 1.0);
    }
}
