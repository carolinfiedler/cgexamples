#version 430

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

uniform float elapsed; // time delta
uniform float elapsed2; // squared time delta
uniform float friction = 0.3333;
uniform vec4 gravity = vec4(0.0f, -9.80665f, 0.0f, 0.0f);

layout (std430, binding = 0) buffer Positions
{
	vec4 positions[];
};

layout (std430, binding = 1) buffer Velocities
{
	vec4 velocities[];
};

void main()
{
	uint gID = gl_GlobalInvocationID.x;

    vec4 p = positions[gID];
    vec4 v = velocities[gID];

	vec4 f = gravity - v * friction;

    p = p + (v * elapsed) + (0.5 * f * elapsed2);
    v = v + (f * elapsed);

    if (p.y < 0.0)
    {
        p.y *= -1.0;
        v.y *= -1.0;

        v =  v * (1.0 - friction);
    }

    p.w = dot(vec3(v), vec3(v));
    
    positions[gID] = p;
    velocities[gID] = v;
}
